default_platform(:ios)

##################
#
# Tests & Analyse
#
##################

lane :unit_tests do
  scan(
    scheme: "EarningsMeter",
    configuration: "Debug",
    device: "iPhone 8",
    output_directory: "./DerivedData/",
    derived_data_path: "./DerivedData/",
    clean: true,
  )
end

lane :ui_tests do
  scan(
    scheme: "EarningsMeterUITests",
    configuration: "Debug",
    device: "iPhone 8",
    output_directory: "./DerivedData/",
    derived_data_path: "./DerivedData/",
  )
end

lane :all_tests do
  unit_tests
  ui_tests
end


##################
#
# Distribution
#
##################

lane :prod_to_testflight do
  build_and_upload_to_testflight(
    app_identifiers: [
        "com.ridgeviewapps.earnings-meter", 
        "com.ridgeviewapps.earnings-meter.widgetExtension"
    ],
    xcconfig: "./Config/Release.xcconfig",
    # profile_name: "match AppStore com.ridgeviewapps.earnings-meter",
    # distribution_groups: []
  )
end

lane :beta_to_testflight do
  build_and_upload_to_testflight(
    app_identifiers: [
        "com.ridgeviewapps.earnings-meter.beta", 
        "com.ridgeviewapps.earnings-meter.beta.widgetExtension"
    ],
    xcconfig: "./Config/Beta.xcconfig",
    # profile_name: "match AppStore com.ridgeviewapps.earnings-meter.beta",
    # distribution_groups: ["App Store Connect Users"],
    badge_shield_title: "Beta"
  )
end


lane :upload_screenshots do |options|
    
  unless options[:main_target_bundle_id]
    options[:main_target_bundle_id] = "com.ridgeviewapps.earnings-meter"
  end
  main_bundle_id = options[:main_target_bundle_id]

  app_store_connect_api_key(duration: 1200)

  deliver(
    app_identifier: main_bundle_id,
    app_version: options[:app_version],
    automatic_release: false,
    submit_for_review: false,
    overwrite_screenshots: true,
    precheck_include_in_app_purchases: false,
    force: true, # Skips the interactive preview of html file before uploading
  )
end


lane :submit_for_review do |options|
    
  unless options[:main_target_bundle_id]
    options[:main_target_bundle_id] = "com.ridgeviewapps.earnings-meter"
  end
  main_bundle_id = options[:main_target_bundle_id]

  app_store_connect_api_key(duration: 1200)
    
  testflight_build_no = options[:build_no].to_s
  if testflight_build_no.empty?
    testflight_build_no = latest_testflight_build_number(app_identifier: main_bundle_id).to_s
  end

  puts "Submitting #{testflight_build_no} build number for review"

  # TODO: Dec 2020. Revisit privacy upload later (too new & flaky right now)
  #
  # upload_app_privacy_details_to_app_store(
  #   app_identifier: main_bundle_id,
  #   username: options["app_store_connect_user_id"],
  #   json_path: "./fastlane/metadata/app_privacy_details.json",
  # )
  
  deliver(
    app_identifier: main_bundle_id,
    app_version: options[:app_version],
    automatic_release: false,
    submit_for_review: true,
    build_number: testflight_build_no,
    precheck_include_in_app_purchases: false,
    app_rating_config_path: "./fastlane/metadata/rating_config.json",
    force: true, # Skips the interactive preview of html file before uploading
    price_tier: 0,
    submission_information: {
      add_id_info_uses_idfa: true,
      add_id_info_serves_ads: false,
      add_id_info_tracks_action: false,
      add_id_info_tracks_install: false,
      add_id_info_limits_tracking: true,
      # content_rights_contains_third_party_content: true,
      # content_rights_has_rights: true,
    }
  )
end

# Private lanes

private_lane :build_and_upload_to_testflight do |options|
  # Prepare build
  if is_ci    
    increment_build_number(
      build_number: "$BITRISE_BUILD_NUMBER"
    )
  end

  # Install keys
  if is_ci
    # app_store_connect_api_key fetches from env using default names APP_STORE_CONNECT_API_KEY_KEY_ID, APP_STORE_CONNECT_API_KEY_ISSUER_ID, APP_STORE_CONNECT_API_KEY_KEY
    app_store_connect_api_key(duration: 1200)
  end

  # Get certificates and profiles
  match(
    readonly: false, # The docs recommend setting this to true for CI (but actually we want CI to regenerate provisioning profiles)
    clone_branch_directly: true,
    git_url: "git@github.com:ridgeview-apps/ridgeview-certs.git",
    username: "ci.ridgeview@gmail.com", # This is your Apple username not GitHub username
    app_identifier: options[:app_identifiers],
    type: "appstore", # appstore is for production and testflight
  )
  # Badge overlay (optional - only added when a badge_shield_title is specified)
  #add_badge_overlay(
  #  badge_shield_title: options[:badge_shield_title]
  #)
  # Build
#   build_app(
#     output_name: options["output_name"],
#     export_method: options["export_method"],
#     scheme: options["xcode_scheme"],
#     configuration: options["xcode_configuration"],
#     export_options: options["export_options"],
#     xcconfig: options["additional_xcconfig"],
#     xcargs: xcargs_str,
#     # codesigning_identity: options["code_sign_identity"], # Set directly in xcode project instead (causes pod-signing issues otherwise)
#   )

  gym(
    clean: true,
    scheme: "EarningsMeter",
    configuration: "Release",
    # sdk: "iphoneos15.5",
    xcconfig: options[:xcconfig],
    # skip_codesigning: false,
    # export_method: "app-store",
    # export_team_id: "CD3JZ8RC7K",
    # export_options: {
    #   provisioningProfiles: {
    #     options[:app_identifier] => options[:profile_name]
    #   }
    # }
  )

  # Upload
  upload_to_testflight(
    skip_waiting_for_build_processing: true
  )
end

private_lane :add_badge_overlay do |options|

  unless options[:badge_shield_title]
    puts "Skipping badge overlay (no badge_shield_title was specified)."
  else
    badge_shield_title = options[:badge_shield_title]
    badge_shield_date_text = Time.new.strftime("%d.%m.%y")
    badge_shield_date_background_colour = "blue"

    # For additional options, see: https://github.com/HazAT/badge
    add_badge(
      shield: "#{badge_shield_title}-#{badge_shield_date_text}-#{badge_shield_date_background_colour}",
      no_badge: true # Hides the diagonal "ALPHA/BETA" badge
    )
  end

end
